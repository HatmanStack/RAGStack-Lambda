#!/bin/bash
# Configure UI with CloudFormation outputs
#
# Usage: ./scripts/configure_ui.sh [stack-name]
# Default stack name: RAGStack-dev

set -e

STACK_NAME=${1:-RAGStack-dev}

echo "========================================="
echo "RAGStack-Lambda UI Configuration"
echo "========================================="
echo ""
echo "Fetching CloudFormation outputs for stack: $STACK_NAME"
echo ""

# Check if AWS CLI is installed
if ! command -v aws &> /dev/null; then
    echo "Error: AWS CLI is not installed"
    echo "Please install AWS CLI: https://aws.amazon.com/cli/"
    exit 1
fi

# Check if stack exists
if ! aws cloudformation describe-stacks --stack-name "$STACK_NAME" &> /dev/null; then
    echo "Error: CloudFormation stack '$STACK_NAME' not found"
    echo ""
    echo "Available stacks:"
    aws cloudformation list-stacks --stack-status-filter CREATE_COMPLETE UPDATE_COMPLETE --query 'StackSummaries[*].StackName' --output text
    exit 1
fi

# Get stack region
REGION=$(aws cloudformation describe-stacks \
  --stack-name "$STACK_NAME" \
  --query 'Stacks[0].StackRegion' \
  --output text 2>/dev/null || echo "us-east-1")

# Get outputs
echo "Retrieving stack outputs..."

USER_POOL_ID=$(aws cloudformation describe-stacks \
  --stack-name "$STACK_NAME" \
  --query 'Stacks[0].Outputs[?OutputKey==`UserPoolId`].OutputValue' \
  --output text)

USER_POOL_CLIENT_ID=$(aws cloudformation describe-stacks \
  --stack-name "$STACK_NAME" \
  --query 'Stacks[0].Outputs[?OutputKey==`UserPoolClientId`].OutputValue' \
  --output text)

IDENTITY_POOL_ID=$(aws cloudformation describe-stacks \
  --stack-name "$STACK_NAME" \
  --query 'Stacks[0].Outputs[?OutputKey==`IdentityPoolId`].OutputValue' \
  --output text)

GRAPHQL_URL=$(aws cloudformation describe-stacks \
  --stack-name "$STACK_NAME" \
  --query 'Stacks[0].Outputs[?OutputKey==`GraphQLApiUrl`].OutputValue' \
  --output text)

INPUT_BUCKET=$(aws cloudformation describe-stacks \
  --stack-name "$STACK_NAME" \
  --query 'Stacks[0].Outputs[?OutputKey==`InputBucketName`].OutputValue' \
  --output text)

# Validate required outputs
if [ -z "$USER_POOL_ID" ] || [ -z "$USER_POOL_CLIENT_ID" ] || [ -z "$GRAPHQL_URL" ] || [ -z "$INPUT_BUCKET" ]; then
    echo ""
    echo "Error: Missing required CloudFormation outputs"
    echo "Make sure your stack has these outputs defined:"
    echo "  - UserPoolId"
    echo "  - UserPoolClientId"
    echo "  - IdentityPoolId (optional)"
    echo "  - GraphQLApiUrl"
    echo "  - InputBucketName"
    echo ""
    echo "Current outputs:"
    aws cloudformation describe-stacks --stack-name "$STACK_NAME" --query 'Stacks[0].Outputs[*].[OutputKey,OutputValue]' --output table
    exit 1
fi

# Create .env.local
ENV_FILE="src/ui/.env.local"

echo ""
echo "Creating $ENV_FILE..."

cat > "$ENV_FILE" << EOF
# RAGStack-Lambda UI Configuration
# Auto-generated by scripts/configure_ui.sh on $(date)
# Stack: $STACK_NAME

# AWS Region
VITE_AWS_REGION=$REGION

# Cognito User Pool
VITE_USER_POOL_ID=$USER_POOL_ID
VITE_USER_POOL_CLIENT_ID=$USER_POOL_CLIENT_ID
VITE_IDENTITY_POOL_ID=${IDENTITY_POOL_ID:-}

# AppSync GraphQL API
VITE_GRAPHQL_URL=$GRAPHQL_URL

# S3 Input Bucket
VITE_INPUT_BUCKET=$INPUT_BUCKET
EOF

echo ""
echo "âœ… Configuration complete!"
echo ""
echo "Environment Variables:"
echo "  Region:             $REGION"
echo "  User Pool:          $USER_POOL_ID"
echo "  Client ID:          $USER_POOL_CLIENT_ID"
echo "  Identity Pool:      ${IDENTITY_POOL_ID:-Not configured}"
echo "  GraphQL API:        $GRAPHQL_URL"
echo "  Input Bucket:       $INPUT_BUCKET"
echo ""
echo "Next steps:"
echo "  1. cd src/ui"
echo "  2. npm install (if not done)"
echo "  3. npm start"
echo ""
echo "The UI will be available at: http://localhost:5173"
echo ""
